# -*- coding: utf-8 -*-
"""Fiona_Merged_Dataframe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14oYiqboBh4sU8RQaZ1cWhiYzPkJfy2B0

Imports
"""

!pip install pandas

!pip install plotly

pip install nbformat==4.2.0

pip install --upgrade pip

import pandas as pd

"""# Loading Data and Cleaning

must download two datasets, mixed_bev_receipts and demographic csvs

## Beverage Dataset
"""

df = pd.read_csv("C:\\Users\\fiona\\Downloads\\Mixed_Beverage_Gross_Receipts (1).csv")

df.head()

len(df)

"""Ran into some issues completely loading the file in Google Colab. Whenever loading the beverage database file should have a length of 3,104,458."""

# Austin Only
df_austin = df[df['Location City'] == 'AUSTIN']

len(df_austin)

"""Length of Austin Dataframe should be 195682."""

#Type Casting
pd.options.display.float_format = '{:.0f}'.format

# Assuming column names are correct, adjust them if needed
columns_to_convert = ['Liquor Receipts', 'Total Receipts']

# Convert specified columns to whole numbers
df_austin[columns_to_convert] = df_austin[columns_to_convert].astype(float)

# Now, for the columns 'Wine Receipts', 'Beer Receipts', and 'Cover Charge Receipts'
# Remove the decimal point
df_austin['Wine Receipts'] = df_austin['Wine Receipts'].astype(int)
df_austin['Beer Receipts'] = df_austin['Beer Receipts'].astype(int)
df_austin['Cover Charge Receipts'] = df_austin['Cover Charge Receipts'].astype(int)

date_columns = ['Responsibility Begin Date', 'Responsibility End Date', 'Obligation End Date']

# Convert specified columns to datetime format
df_austin[date_columns] = df_austin[date_columns].apply(pd.to_datetime, errors='coerce')

df_austin.describe()

"""Important Observations:
- 195,682 Alcohol Related Locations in Austin that submitted Tax Receipts
- Mean Liquor Receipts was 31,828
- Mean Wine Receipts was 8,386
- Mean Beer Receipts was 15,455
- Mean Cover Charge Receipts was 119
- Mean Total Receipts was 55,841

Ensuing questions:
- How long are these periods when these retailers issued these receipts?
- Heatmapping the cover charge places?
- Correlating with other things such as popularity ratings??
"""

df_austin['Responsibility Begin Date'] = pd.to_datetime(df_austin['Responsibility Begin Date'])

# Fill missing 'Responsibility End Date' with today's date
df_austin['Responsibility End Date'] = df_austin['Responsibility End Date'].fillna(pd.Timestamp.today())

# Convert 'Responsibility End Date' to datetime
df_austin['Responsibility End Date'] = pd.to_datetime(df_austin['Responsibility End Date'])

# Create a new column 'Responsibility Time Difference'
df_austin['Responsibility Time Difference (Days)'] = (df_austin['Responsibility End Date'] - df_austin['Responsibility Begin Date']).dt.days

# Remove rows where 'Responsibility Time Difference' is NaT
print(df_austin.shape[0])
df_austin = df_austin[df_austin['Responsibility Time Difference (Days)'].notna()]
print(df_austin.shape[0])

"""## Demographics Dataset"""

zip_code_demographics = pd.read_csv("C:\\Users\\fiona\\Downloads\\SDS ZIP Code Data - https___www.austintexas.gov_page_data-library - Sheet1.csv")

zip_code_demographics = zip_code_demographics.apply(pd.to_numeric, errors='coerce')

"""## Merged Dataset"""

df_austin['Location Zip'] = pd.to_numeric(df_austin['Location Zip'])
zip_code_demographics['ZIP CODES'] = pd.to_numeric(zip_code_demographics['ZIP CODES'])

# Merge the dataframes based on 'Location Zip' and 'ZIP CODES'
df_merged = pd.merge(df_austin, zip_code_demographics, left_on='Location Zip', right_on='ZIP CODES', how='left')

df_merged.describe()

df_merged.to_csv('C:\\Users\\fiona\\Downloads\\austin_bev_demographics.csv', encoding='utf-8')